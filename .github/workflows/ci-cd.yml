name: Docker CI/CD

on:
  push:
    branches:
      - main  # Trigger the workflow on push to the main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v2

    # Step 2: Set up Docker Buildx (for multi-platform support)
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Step 3: Log in to Docker Hub using GitHub secrets
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}  # Store your Docker Hub username in GitHub secrets
        password: ${{ secrets.DOCKER_PASSWORD }}  # Store your Docker Hub password in GitHub secrets

    # Step 4: Build the Docker image
    - name: Build Docker image
      run: |
        docker build --build-arg ENV_VAR_NAME=${{ secrets.ENV_VAR_NAME }} -t your-dockerhub-username/your-image-name:latest .

    # Step 5: Push the Docker image to Docker Hub
    - name: Push Docker image to Docker Hub
      run: |
        docker push your-dockerhub-username/your-image-name:latest

    # Step 6: Deploy to EC2 (SSH into EC2 and run the Docker container)
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v0.1.0
      with:
        host: ${{ secrets.EC2_HOST }}  # Store your EC2 public IP in GitHub secrets
        username: ubuntu
        key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}  # Store your EC2 private key as a GitHub secret
        script: |
          # Pull the latest image from Docker Hub
          docker pull your-dockerhub-username/your-image-name:latest

          # Stop and remove any running containers from previous deployments (if any)
          docker stop your-container-name || true
          docker rm your-container-name || true

          # Run the Docker container on EC2
          docker run -d -p 3000:3000 --name your-container-name your-dockerhub-username/your-image-name:latest

          # View the logs of the running container
          docker logs -f your-container-name  # Follow the logs in real-time
